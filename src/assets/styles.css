@import url('https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Cabin:ital,wght@0,400;0,700;1,400&family=Raleway:wght@200;400&display=swap');

@tailwind base;

@tailwind components;

@tailwind utilities;



html,
body {
  height: 100%;
  font-family: 'Press Start 2P', cursive;

}

.intro-bg {
  background-image: url(/src/assets/RPG\ MAKER\ WEB\ BACKGROUND\ 4.png);
  background-repeat: no-repeat;
  background-size: cover;
}


.active {
  @apply bg-green-400 bg-opacity-50;

}



/* typewritter effect intro modal */


 .css-typing-name p {
  white-space: nowrap;
  overflow: hidden;
}

.css-typing-name p:nth-child(1) {
  width: 16.8em;
  opacity: 0;
  -webkit-animation: type2 5s steps(40, end);
  animation: type2 2s steps(40, end);
  -webkit-animation-delay: 2s;
  animation-delay: 2s;
  -webkit-animation-fill-mode: forwards;
  animation-fill-mode: forwards;
}


@keyframes type2 {
  0% {
    width: 0;
  }

  1% {
    opacity: 1;
  }

  99.9% {}

  100% {
    opacity: 1;

  }
}

@-webkit-keyframes type2 {
  0% {
    width: 0;
  }

  1% {
    opacity: 1;
  }

  99.9% {}

  100% {
    opacity: 1;

  }
} 



@keyframes grow {
  0% {
    max-height: var(--lineHeight);
  }

  100% {
    max-height: calc(var(--lineHeight) * var(--lines));
  }
}

@keyframes carriageReturn {
  0% {
    top: 0;
  }

  100% {
    top: calc(var(--lineHeight) * var(--lines));
  }
}

@keyframes type {
  0% {
    width: 100%;
  }

  100% {
    width: 0%;
  }
}




/* Laptop responsive */

@media (min-width: 1280px) {

  html,
  body {
    height: 100%;
    font-family: 'Press Start 2P', cursive;


  }

  .home-bg {
    background-image: url(/src/assets/RPG\ MAKER\ WEB\ BACKGROUND\ 4.png);
    background-repeat: no-repeat;
    background-size: cover;
    /* height: auto; */

  }


  .grid {
    grid-template-columns: repeat(3, 1fr);
    grid-gap: 5px;


  }

  .block-1 {
    grid-row: span 80 / auto;
    background: rgba(0, 0, 0, 0.466);
    margin-top: 10px;
    margin-left: 10px;
  }

  .block-2 {
    grid-row: span 30 / auto;
    background: rgba(0, 0, 0, 0.466);
    margin-top: 10px;
  }

  .block-3 {
    grid-row: span 15 / auto;
    background: rgba(0, 0, 0, 0.466);
    margin-right: 10px;
  }


  .block-4 {
    grid-row: span 15 / auto;
    background: rgba(0, 0, 0, 0.466);
    margin-top: 10px;
    margin-right: 10px;
  }

  .block-5 {
    grid-row: span 90 / auto;
    background: rgba(0, 0, 0, 0.466);
    margin-left: 10px;
  }

  .block-6 {
    grid-column: span 2 / auto;
    grid-row: span 70 / auto;
    background: rgba(0, 0, 0, 0.466);
    margin-right: 10px;
  }

  .block-7 {
    grid-column: span 2 / auto;
    grid-row: span 70 / auto;
    background: rgba(0, 0, 0, 0.466);
    margin-right: 10px;
  }

  /* GAMEOVER SCREEN */

  .gameover-bg {
    color: #fff;
    /* background: #000; */
    background-image: url(./pixelartbg.jpg);
    background-repeat: no-repeat;
    background-size: cover;
  }

  /* CSS typing effect for the text in auto modal/email INDEX*/

  .typewriter {
    --bgColor: #0f118a;
    --lines: 900;
    --lineHeight: 1.5rem;
    --timePerLine: 4s;
    --widthCh: 56;
    --width: calc(var(--widthCh) * 1ch);
    /* do not touch the time property!!! */
    --time: calc(var(--lines) * var(--timePerLine));
    animation: grow var(--time) steps(var(--lines));
    animation-fill-mode: forwards;
    background: var(--bgColor);
    line-height: var(--lineHeight);
    max-height: var(--lineHeight);
    overflow: hidden;
    position: relative;
    width: var(--width);
  }

  .typewriter::before {
    content: "";
    animation:
      type var(--timePerLine) linear infinite,
      carriageReturn var(--time) steps(var(--lines)) var(--lines),
      caret 0.5s steps(2) infinite;
    background: var(--bgColor);
    border-left: 2px solid;
    bottom: 0;
    height: 2rem;
    position: absolute;
    right: 0;
    width: 100%;
  }

  .typewriter.no-caret::before {
    border-left-width: 0;
  }


  .typewriter::before {
    animation:
      type var(--timePerLine) steps(var(--widthCh)) infinite,
      carriageReturn var(--time) steps(var(--lines)) var(--lines),
      caret 0.5s steps(2) infinite;
  }

  /* CSS typing effect for the text in modal ITEMS*/

  .typewriterItems {
    --bgColor: #0f118a;
    --lines: 900;
    --lineHeight: 1.5rem;
    --timePerLine: 2s;
    --widthCh: 35;
    --width: calc(var(--widthCh) * 1ch);
    /* do not touch the time property!!! */
    --time: calc(var(--lines) * var(--timePerLine));
    animation: grow var(--time) steps(var(--lines));
    animation-fill-mode: forwards;
    background: var(--bgColor);
    line-height: var(--lineHeight);
    max-height: var(--lineHeight);
    overflow: hidden;
    position: relative;
    width: var(--width);
  }

  .typewriterItems::before {
    content: "";
    animation:
      type var(--timePerLine) linear infinite,
      carriageReturn var(--time) steps(var(--lines)) var(--lines),
      caret 0.5s steps(2) infinite;
    background: var(--bgColor);
    border-left: 2px solid;
    bottom: 0;
    height: 2rem;
    position: absolute;
    right: 0;
    width: 100%;
  }

  .typewriterItems.no-caret-items::before {
    border-left-width: 0;
  }


  .typewriterItems::before {
    animation:
      type var(--timePerLine) steps(var(--widthCh)) infinite,
      carriageReturn var(--time) steps(var(--lines)) var(--lines),
      caret 0.5s steps(2) infinite;
  }



/* CSS typing effect for the text in auto modal INTRO*/

.typewriterIntro {
  --bgColor: #000;
  --lines: 900;
  --lineHeight: 1.5rem;
  --timePerLine: 3s;
  --widthCh: 20;
  --width: calc(var(--widthCh) * 1ch);
  /* do not touch the time property!!! */
  --time: calc(var(--lines) * var(--timePerLine));
  animation: grow var(--time) steps(var(--lines));
  animation-fill-mode: forwards;
  background: var(--bgColor);
  line-height: var(--lineHeight);
  max-height: var(--lineHeight);
  overflow: hidden;
  position: relative;
  width: var(--width);
}

.typewriterIntro::before {
  content: "";
  animation:
    type var(--timePerLine) linear infinite,
    carriageReturn var(--time) steps(var(--lines)) var(--lines),
    caret 0.5s steps(2) infinite;
  background: var(--bgColor);
  border-left: 0px solid;
  bottom: 0;
  height: 2rem;
  position: absolute;
  right: 0;
  width: 100%;
}

.typewriterIntro.no-caret-intro::before {
  border-left-width: 0;
}


.typewriterIntro::before {
  animation:
    type var(--timePerLine) steps(var(--widthCh)) infinite,
    carriageReturn var(--time) steps(var(--lines)) var(--lines),
    caret 0.5s steps(2) infinite;
}




}







/* Ipad responsive */

@media screen and (max-width: 1279px) and (min-width: 800px) {

  html,
  body {
    height: 100%;
    font-family: 'Press Start 2P', cursive;


  }

  body {
    background-image: url(/src/assets/bgIpadPhone.PNG);
    background-repeat: repeat;
    background-size: 100%;
    /* height: auto; */

  }

  .grid {
    grid-gap: 6px;


  }

  .block-1 {
    background: rgba(0, 0, 0, 0.466);
    margin-top: 10px;
    margin-left: 10px;
    grid-column: 1;
    grid-row: 1 / 4;
    padding: 2px;
  }

  .block-2 {
    /* grid-row: span 10 / auto; */
    background: rgba(0, 0, 0, 0.466);
    margin-right: 10px;
    grid-column: 2;
    grid-row: 3 / 4;


  }

  .block-3 {
    /* grid-row: span 10 / auto;
        grid-column: span 90 / auto; */
    background: rgba(0, 0, 0, 0.466);
    margin-right: 10px;
    grid-column: 2;
    grid-row: 2;
  }

  .block-4 {
    /* grid-row: span 10 / auto; */
    background: rgba(0, 0, 0, 0.466);
    margin-top: 10px;
    margin-right: 10px;
    grid-column: 2;
    grid-row: 1;
  }

  .block-5 {
    /* grid-row: span 90 / auto;
        grid-column: span 90 / auto; */
    background: rgba(0, 0, 0, 0.466);
    margin-left: 10px;
    grid-column: 1;
    grid-row: 4;
  }

  .block-6 {
    /* grid-column: span 10 / auto;
        grid-row: span 60 / auto; */
    background: rgba(0, 0, 0, 0.466);
    margin-right: 10px;
    grid-column: 2;
    grid-row: 4;
    justify-content: center;

  }

  .block-7 {
    /* grid-column: span 10 / auto;
        grid-row: span 60 / auto; */
    background: rgba(0, 0, 0, 0.466);
    margin-right: 10px;
    margin-left: 10px;
    grid-column: 1/3;
    grid-row: 5;
  }

  /* responsive for the intro html file */

  .modal-Intro {
    width: 80%;
    position: fixed;
    left: 10%;

  }

  .input-name {
    width: 30%;
  }


  /* responsive for the gameover html file */

  .gameover-bg {
    color: #fff;
    background-image: url(./pixelartbg.jpg);
    background-repeat: no-repeat;
    background-size: auto 100%;
    background-position: center;

  }

  .col-1-gameover,
  .col-1-gameover span {
    font-size: 4.5rem;
    column-gap: 4rem;

  }

  .col-2-gameover span {
    font-size: 1.5rem;

  }

  .col-2-gameover {
    column-gap: 9rem;
    align-items: center;
  }

  /* Responsive for the main index html file */

  .contact-icons {
    padding: 2px;
  }

  .hidden-modal {
    width: 75%;
    position: fixed;
    left: 6.5rem;
  }

  .language-container {
    top: 15rem;
    width: 20rem;
    left: 50%;
  }


  /* CSS typing effect for the text in auto modal/email INDEX*/

  .typewriter {
    --bgColor: #0f118a;
    --lines: 900;
    --lineHeight: 1.5rem;
    --timePerLine: 2s;
    --widthCh: 30;
    --width: calc(var(--widthCh) * 1ch);
    /* do not touch the time property!!! */
    --time: calc(var(--lines) * var(--timePerLine));
    animation: grow var(--time) steps(var(--lines));
    animation-fill-mode: forwards;
    background: var(--bgColor);
    line-height: var(--lineHeight);
    max-height: var(--lineHeight);
    overflow: hidden;
    position: relative;
    width: var(--width);
  }

  .typewriter::before {
    content: "";
    animation:
      type var(--timePerLine) linear infinite,
      carriageReturn var(--time) steps(var(--lines)) var(--lines),
      caret 0.5s steps(2) infinite;
    background: var(--bgColor);
    border-left: 2px solid;
    bottom: 0;
    height: 2rem;
    position: absolute;
    right: 0;
    width: 100%;
  }

  .typewriter.no-caret::before {
    border-left-width: 0;
  }


  .typewriter::before {
    animation:
      type var(--timePerLine) steps(var(--widthCh)) infinite,
      carriageReturn var(--time) steps(var(--lines)) var(--lines),
      caret 0.5s steps(2) infinite;
  }

  
/* CSS typing effect for the text in modal ITEMS*/

.typewriterItems {
  --bgColor: #0f118a;
  --lines: 900;
  --lineHeight: 1.5rem;
  --timePerLine: 2s;
  --widthCh: 35;
  --width: calc(var(--widthCh) * 1ch);
  /* do not touch the time property!!! */
  --time: calc(var(--lines) * var(--timePerLine));
  animation: grow var(--time) steps(var(--lines));
  animation-fill-mode: forwards;
  background: var(--bgColor);
  line-height: var(--lineHeight);
  max-height: var(--lineHeight);
  overflow: hidden;
  position: relative;
  width: var(--width);
}

.typewriterItems::before {
  content: "";
  animation:
    type var(--timePerLine) linear infinite,
    carriageReturn var(--time) steps(var(--lines)) var(--lines),
    caret 0.5s steps(2) infinite;
  background: var(--bgColor);
  border-left: 2px solid;
  bottom: 0;
  height: 2rem;
  position: absolute;
  right: 0;
  width: 100%;
}

.typewriterItems.no-caret-items::before {
  border-left-width: 0;
}


.typewriterItems::before {
  animation:
    type var(--timePerLine) steps(var(--widthCh)) infinite,
    carriageReturn var(--time) steps(var(--lines)) var(--lines),
    caret 0.5s steps(2) infinite;
}

/* CSS typing effect for the text in auto modal INTRO*/

.typewriterIntro {
  --bgColor: #000;
  --lines: 900;
  --lineHeight: 1.5rem;
  --timePerLine: 1s;
  --widthCh: 10;
  --width: calc(var(--widthCh) * 1ch);
  /* do not touch the time property!!! */
  --time: calc(var(--lines) * var(--timePerLine));
  animation: grow var(--time) steps(var(--lines));
  animation-fill-mode: forwards;
  background: var(--bgColor);
  line-height: var(--lineHeight);
  max-height: var(--lineHeight);
  overflow: hidden;
  position: relative;
  width: var(--width);
}

.typewriterIntro::before {
  content: "";
  animation:
    type var(--timePerLine) linear infinite,
    carriageReturn var(--time) steps(var(--lines)) var(--lines),
    caret 0.5s steps(2) infinite;
  background: var(--bgColor);
  border-left: 0px solid;
  bottom: 0;
  height: 2rem;
  position: absolute;
  right: 0;
  width: 100%;
}

.typewriterIntro.no-caret-intro::before {
  border-left-width: 0;
}


.typewriterIntro::before {
  animation:
    type var(--timePerLine) steps(var(--widthCh)) infinite,
    carriageReturn var(--time) steps(var(--lines)) var(--lines),
    caret 0.5s steps(2) infinite;
}






}


/* Mobile responsive */

@media (max-width: 800px) {

  html,
  body {
    height: 100%;
    font-family: 'Press Start 2P', cursive;


  }

  body {
    background-image: url(/src/assets/bgIpadPhone.PNG);
    background-repeat: repeat;
    background-size: auto 100%;
    background-position: center
  }

  .grid {
    grid-template-columns: repeat(1, 1fr);
    grid-gap: 6px;

  }

  .block-1 {
    background: rgba(0, 0, 0, 0.466);
    margin-top: 10px;
    grid-column: 1;
    grid-row: 1;
    padding: 0px;

  }

  .block-2 {
    background: rgba(0, 0, 0, 0.466);

    grid-column: 1;
    grid-row: 3;
  }

  .block-3 {
    background: rgba(0, 0, 0, 0.466);

    grid-column: 1;
    grid-row: 2;
  }


  .block-4 {
    background: rgba(0, 0, 0, 0.466);

    grid-column: 1;
    grid-row: 7;
  }

  .block-5 {
    background: rgba(0, 0, 0, 0.466);
    margin-left: 10px;
    margin-right: 10px;
    grid-column: 1;
    grid-row: 6;

  }

  .block-6 {
    background: rgba(0, 0, 0, 0.466);
    grid-column: 1;
    grid-row: 4;
    justify-content: center;

  }


  .block-7 {
    background: rgba(0, 0, 0, 0.466);
    grid-column: 1;
    grid-row: 5;

  }



  /* responsive for the intro html file */

  .modal-Intro {
    width: 80%;
    position: fixed;
    left: 10%;
    text-align: center;

  }

  .input-name {
    width: 50%;
  }

  /* responsive for the gameover html file */

  .gameover-bg {
    color: #fff;
    background-image: url(./pixelartbg.jpg);
    background-repeat: no-repeat;
    background-size: auto 100%;
    background-position: center;

  }

  .col-1-gameover,
  .col-1-gameover span {
    font-size: 2.5rem;
    column-gap: 1rem;

  }

  .col-2-gameover span {
    font-size: 1.5rem;

  }

  .col-2-gameover {
    flex-direction: column;
    row-gap: 4rem;
    align-items: center;
  }

  /* Responsive for the main index html file */

  .contact-icons {
    padding: 2px;
  }

  .modal-Onload {
    width: 75%;
    position: fixed;
    left: 10%;
  }

  .hidden-modal {
    width: 75%;
    position: fixed;
    left: 3rem;
  }



  .language-container {
    top: 28rem;
    width: 20rem;
    left: 10%;
  }

/* GAMEOVER SCREEN */

.go-text-container {
  transform: scale(0.94);
  animation: scale 1s forwards cubic-bezier(0.5, 1, 0.89, 1);
}


.text-game {
  opacity: 0;
  filter: blur(4px);
}

.col-1-gameover span:nth-child(1) {
  animation: fade-in 1.8s 1.1s forwards cubic-bezier(0.62, .24, .87, .44);
}

.col-1-gameover span:nth-child(2) {
  animation: fade-in 1.8s 1.2s forwards cubic-bezier(0.11, 0, 0.5, 0);
}


.col-2-gameover span:nth-child(1) {
  animation: fade-in 4.8s 4.6s forwards cubic-bezier(0.11, 0, 0.5, 0);
}

.col-2-gameover span:nth-child(2) {
  animation: fade-in 4.8s 4.7s forwards cubic-bezier(0.11, 0, 0.5, 0);
}

@keyframes fade-in {
  100% {
    opacity: 1;
    filter: blur(0);
  }
}

  /* CSS typing effect for the text in auto modal/email INDEX*/

  .typewriter {
    --bgColor: #0f118a;
    --lines: 900;
    --lineHeight: 1.5rem;
    --timePerLine: 1s;
    --widthCh: 14;
    --width: calc(var(--widthCh) * 1ch);
    /* do not touch the time property!!! */
    --time: calc(var(--lines) * var(--timePerLine));
    animation: grow var(--time) steps(var(--lines));
    animation-fill-mode: forwards;
    background: var(--bgColor);
    line-height: var(--lineHeight);
    max-height: var(--lineHeight);
    overflow: hidden;
    position: relative;
    width: var(--width);
  }

  .typewriter::before {
    content: "";
    animation:
      type var(--timePerLine) linear infinite,
      carriageReturn var(--time) steps(var(--lines)) var(--lines),
      caret 0.5s steps(2) infinite;
    background: var(--bgColor);
    border-left: 2px solid;
    bottom: 0;
    height: 2rem;
    position: absolute;
    right: 0;
    width: 100%;
  }

  .typewriter.no-caret::before {
    border-left-width: 0;
  }


  .typewriter::before {
    animation:
      type var(--timePerLine) steps(var(--widthCh)) infinite,
      carriageReturn var(--time) steps(var(--lines)) var(--lines),
      caret 0.5s steps(2) infinite;
  }

  
/* CSS typing effect for the text in modal ITEMS*/

.typewriterItems {
  --bgColor: #0f118a;
  --lines: 900;
  --lineHeight: 1.5rem;
  --timePerLine: 1s;
  --widthCh: 14;
  --width: calc(var(--widthCh) * 1ch);
  /* do not touch the time property!!! */
  --time: calc(var(--lines) * var(--timePerLine));
  animation: grow var(--time) steps(var(--lines));
  animation-fill-mode: forwards;
  background: var(--bgColor);
  line-height: var(--lineHeight);
  max-height: var(--lineHeight);
  overflow: hidden;
  position: relative;
  width: var(--width);
}

.typewriterItems::before {
  content: "";
  animation:
    type var(--timePerLine) linear infinite,
    carriageReturn var(--time) steps(var(--lines)) var(--lines),
    caret 0.5s steps(2) infinite;
  background: var(--bgColor);
  border-left: 2px solid;
  bottom: 0;
  height: 2rem;
  position: absolute;
  right: 0;
  width: 100%;
}

.typewriterItems.no-caret-items::before {
  border-left-width: 0;
}


.typewriterItems::before {
  animation:
    type var(--timePerLine) steps(var(--widthCh)) infinite,
    carriageReturn var(--time) steps(var(--lines)) var(--lines),
    caret 0.5s steps(2) infinite;
}


/* CSS typing effect for the text in auto modal INTRO*/

.typewriterIntro {
  --bgColor: #000;
  --lines: 900;
  --lineHeight: 1.5rem;
  --timePerLine: 1s;
  --widthCh: 10;
  --width: calc(var(--widthCh) * 1ch);
  --time: calc(var(--lines) * var(--timePerLine));
  animation: grow var(--time) steps(var(--lines));
  animation-fill-mode: forwards;
  background: var(--bgColor);
  line-height: var(--lineHeight);
  max-height: var(--lineHeight);
  overflow: hidden;
  position: relative;
  width: var(--width);
}

.typewriterIntro::before {
  content: "";
  animation:
    type var(--timePerLine) linear infinite,
    carriageReturn var(--time) steps(var(--lines)) var(--lines),
    caret 0.5s steps(2) infinite;
  background: var(--bgColor);
  border-left: 0px solid;
  bottom: 0;
  height: 2rem;
  position: absolute;
  right: 0;
  width: 100%;
}

.typewriterIntro.no-caret-intro::before {
  border-left-width: 0;
}


.typewriterIntro::before {
  animation:
    type var(--timePerLine) steps(var(--widthCh)) infinite,
    carriageReturn var(--time) steps(var(--lines)) var(--lines),
    caret 0.5s steps(2) infinite;
}


}

